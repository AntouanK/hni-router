
# One worker per CPU-core.
worker_processes auto;

events {
  worker_connections  1024;
}

http {

  # https://github.com/nginxinc/nginx-amplify-doc/blob/master/amplify-guide.md#additional-nginx-metrics
  log_format  main_ext '$remote_addr - $remote_user [$time_local] "$request" '
                       ' $status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'rt=$request_time ua="$upstream_addr" '
                       'us="$upstream_status" ut="$upstream_response_time" '
                       'ul="$upstream_response_length" '
                       'cs=$upstream_cache_status' ;

  upstream hni_api {
    server hni-api:3000 fail_timeout=5s max_fails=5;
  }

  # socket.io config
  upstream socket_nodes {
    server hni-api:3000 fail_timeout=5s max_fails=5;
  }

  server {
    listen                  80 default_server;
    return                  301 https://$server_name$request_uri;
  }

  #############################################################################
  # main HTTP server
  server {
    listen                  443 ssl http2;
    server_name             hn.dynalias.net;

    ssl_certificate         /usr/share/nginx/certs/fullchain.pem;
    ssl_certificate_key     /usr/share/nginx/certs/privkey.pem;

    access_log              /var/log/nginx/access.log main_ext;
    error_log               /var/log/nginx/error.log warn;

    location /basic_status {
      access_log            /var/log/nginx/basic_status.access.log main_ext;
      stub_status;
    }

    location /api/ {
      proxy_set_header      Host $host;
      proxy_set_header      X-Real-IP $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header      X-Forwarded-Proto $scheme;
      proxy_pass            http://hni_api;
      proxy_read_timeout    90;
    }

    location /websocket {
      # socket.io config
      access_log            /var/log/nginx/socket_io.access.log main_ext;
      proxy_set_header      Connection "upgrade";
      proxy_set_header      Upgrade $http_upgrade;
      proxy_set_header      Host $host;
      proxy_set_header      X-Real-IP $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass            http://socket_nodes;
      proxy_read_timeout    90;
    }

    root /home/docker/workplace/dist;

    # Enable Gzip compressed.
    gzip on;
    # Compress all output labeled with one of the following MIME-types.
    gzip_types
      application/atom+xml
      application/javascript
      application/json
      application/x-font-ttf
      font/opentype
      image/svg+xml
      image/x-icon
      text/css
      text/plain;
    # text/html is always compressed by HttpGzipModule

    location ~ /*.js {
      default_type    application/javascript;
      add_header Cache-Control "public, max-age=0";
      try_files $uri =404;
    }

    location / {
      sendfile on;
      try_files $uri $uri/ /index.html;
    }
  }
}

